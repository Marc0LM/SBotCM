// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: UITreeNodePB.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from UITreeNodePB.proto</summary>
public static partial class UITreeNodePBReflection {

  #region Descriptor
  /// <summary>File descriptor for UITreeNodePB.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static UITreeNodePBReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChJVSVRyZWVOb2RlUEIucHJvdG8i5QIKDFVJVHJlZU5vZGVQQhIMCgRfdG9w",
          "GAEgASgPEg0KBV9sZWZ0GAIgASgPEg4KBl93aWR0aBgDIAEoDxIPCgdfaGVp",
          "Z2h0GAQgASgPEhEKCV9kaXNwbGF5WBgFIAEoDxIRCglfZGlzcGxheVkYBiAB",
          "KA8SEQoJX3NlbGVjdGVkGAcgASgIEg4KBmFjdGl2ZRgIIAEoCBIWCg5pc0Rl",
          "YWN0aXZhdGluZxgJIAEoCBIQCghxdWFudGl0eRgKIAEoDxISCgpfbGFzdFZh",
          "bHVlGAsgASgBEg8KB2Rpc3BsYXkYEiABKAgSDQoFX25hbWUYDCABKAwSDQoF",
          "X3RleHQYDSABKAwSEAoIX3NldFRleHQYDiABKAwSDQoFX2hpbnQYDyABKAwS",
          "HwoXcHl0aG9uX29iamVjdF90eXBlX25hbWUYECABKAkSHwoIY2hpbGRyZW4Y",
          "ESADKAsyDS5VSVRyZWVOb2RlUEJCAkgDYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::UITreeNodePB), global::UITreeNodePB.Parser, new[]{ "Top", "Left", "Width", "Height", "DisplayX", "DisplayY", "Selected", "Active", "IsDeactivating", "Quantity", "LastValue", "Display", "Name", "Text", "SetText", "Hint", "PythonObjectTypeName", "Children" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class UITreeNodePB : pb::IMessage<UITreeNodePB>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<UITreeNodePB> _parser = new pb::MessageParser<UITreeNodePB>(() => new UITreeNodePB());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<UITreeNodePB> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::UITreeNodePBReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public UITreeNodePB() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public UITreeNodePB(UITreeNodePB other) : this() {
    Top_ = other.Top_;
    Left_ = other.Left_;
    Width_ = other.Width_;
    Height_ = other.Height_;
    DisplayX_ = other.DisplayX_;
    DisplayY_ = other.DisplayY_;
    Selected_ = other.Selected_;
    active_ = other.active_;
    isDeactivating_ = other.isDeactivating_;
    quantity_ = other.quantity_;
    LastValue_ = other.LastValue_;
    display_ = other.display_;
    Name_ = other.Name_;
    Text_ = other.Text_;
    SetText_ = other.SetText_;
    Hint_ = other.Hint_;
    pythonObjectTypeName_ = other.pythonObjectTypeName_;
    children_ = other.children_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public UITreeNodePB Clone() {
    return new UITreeNodePB(this);
  }

  /// <summary>Field number for the "_top" field.</summary>
  public const int TopFieldNumber = 1;
  private int Top_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Top {
    get { return Top_; }
    set {
      Top_ = value;
    }
  }

  /// <summary>Field number for the "_left" field.</summary>
  public const int LeftFieldNumber = 2;
  private int Left_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Left {
    get { return Left_; }
    set {
      Left_ = value;
    }
  }

  /// <summary>Field number for the "_width" field.</summary>
  public const int WidthFieldNumber = 3;
  private int Width_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Width {
    get { return Width_; }
    set {
      Width_ = value;
    }
  }

  /// <summary>Field number for the "_height" field.</summary>
  public const int HeightFieldNumber = 4;
  private int Height_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Height {
    get { return Height_; }
    set {
      Height_ = value;
    }
  }

  /// <summary>Field number for the "_displayX" field.</summary>
  public const int DisplayXFieldNumber = 5;
  private int DisplayX_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int DisplayX {
    get { return DisplayX_; }
    set {
      DisplayX_ = value;
    }
  }

  /// <summary>Field number for the "_displayY" field.</summary>
  public const int DisplayYFieldNumber = 6;
  private int DisplayY_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int DisplayY {
    get { return DisplayY_; }
    set {
      DisplayY_ = value;
    }
  }

  /// <summary>Field number for the "_selected" field.</summary>
  public const int SelectedFieldNumber = 7;
  private bool Selected_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Selected {
    get { return Selected_; }
    set {
      Selected_ = value;
    }
  }

  /// <summary>Field number for the "active" field.</summary>
  public const int ActiveFieldNumber = 8;
  private bool active_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Active {
    get { return active_; }
    set {
      active_ = value;
    }
  }

  /// <summary>Field number for the "isDeactivating" field.</summary>
  public const int IsDeactivatingFieldNumber = 9;
  private bool isDeactivating_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsDeactivating {
    get { return isDeactivating_; }
    set {
      isDeactivating_ = value;
    }
  }

  /// <summary>Field number for the "quantity" field.</summary>
  public const int QuantityFieldNumber = 10;
  private int quantity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Quantity {
    get { return quantity_; }
    set {
      quantity_ = value;
    }
  }

  /// <summary>Field number for the "_lastValue" field.</summary>
  public const int LastValueFieldNumber = 11;
  private double LastValue_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public double LastValue {
    get { return LastValue_; }
    set {
      LastValue_ = value;
    }
  }

  /// <summary>Field number for the "display" field.</summary>
  public const int DisplayFieldNumber = 18;
  private bool display_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Display {
    get { return display_; }
    set {
      display_ = value;
    }
  }

  /// <summary>Field number for the "_name" field.</summary>
  public const int NameFieldNumber = 12;
  private pb::ByteString Name_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Name {
    get { return Name_; }
    set {
      Name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "_text" field.</summary>
  public const int TextFieldNumber = 13;
  private pb::ByteString Text_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Text {
    get { return Text_; }
    set {
      Text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "_setText" field.</summary>
  public const int SetTextFieldNumber = 14;
  private pb::ByteString SetText_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString SetText {
    get { return SetText_; }
    set {
      SetText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "_hint" field.</summary>
  public const int HintFieldNumber = 15;
  private pb::ByteString Hint_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Hint {
    get { return Hint_; }
    set {
      Hint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "python_object_type_name" field.</summary>
  public const int PythonObjectTypeNameFieldNumber = 16;
  private string pythonObjectTypeName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string PythonObjectTypeName {
    get { return pythonObjectTypeName_; }
    set {
      pythonObjectTypeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "children" field.</summary>
  public const int ChildrenFieldNumber = 17;
  private static readonly pb::FieldCodec<global::UITreeNodePB> _repeated_children_codec
      = pb::FieldCodec.ForMessage(138, global::UITreeNodePB.Parser);
  private readonly pbc::RepeatedField<global::UITreeNodePB> children_ = new pbc::RepeatedField<global::UITreeNodePB>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::UITreeNodePB> Children {
    get { return children_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as UITreeNodePB);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(UITreeNodePB other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Top != other.Top) return false;
    if (Left != other.Left) return false;
    if (Width != other.Width) return false;
    if (Height != other.Height) return false;
    if (DisplayX != other.DisplayX) return false;
    if (DisplayY != other.DisplayY) return false;
    if (Selected != other.Selected) return false;
    if (Active != other.Active) return false;
    if (IsDeactivating != other.IsDeactivating) return false;
    if (Quantity != other.Quantity) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LastValue, other.LastValue)) return false;
    if (Display != other.Display) return false;
    if (Name != other.Name) return false;
    if (Text != other.Text) return false;
    if (SetText != other.SetText) return false;
    if (Hint != other.Hint) return false;
    if (PythonObjectTypeName != other.PythonObjectTypeName) return false;
    if(!children_.Equals(other.children_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (Top != 0) hash ^= Top.GetHashCode();
    if (Left != 0) hash ^= Left.GetHashCode();
    if (Width != 0) hash ^= Width.GetHashCode();
    if (Height != 0) hash ^= Height.GetHashCode();
    if (DisplayX != 0) hash ^= DisplayX.GetHashCode();
    if (DisplayY != 0) hash ^= DisplayY.GetHashCode();
    if (Selected != false) hash ^= Selected.GetHashCode();
    if (Active != false) hash ^= Active.GetHashCode();
    if (IsDeactivating != false) hash ^= IsDeactivating.GetHashCode();
    if (Quantity != 0) hash ^= Quantity.GetHashCode();
    if (LastValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LastValue);
    if (Display != false) hash ^= Display.GetHashCode();
    if (Name.Length != 0) hash ^= Name.GetHashCode();
    if (Text.Length != 0) hash ^= Text.GetHashCode();
    if (SetText.Length != 0) hash ^= SetText.GetHashCode();
    if (Hint.Length != 0) hash ^= Hint.GetHashCode();
    if (PythonObjectTypeName.Length != 0) hash ^= PythonObjectTypeName.GetHashCode();
    hash ^= children_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Top != 0) {
      output.WriteRawTag(13);
      output.WriteSFixed32(Top);
    }
    if (Left != 0) {
      output.WriteRawTag(21);
      output.WriteSFixed32(Left);
    }
    if (Width != 0) {
      output.WriteRawTag(29);
      output.WriteSFixed32(Width);
    }
    if (Height != 0) {
      output.WriteRawTag(37);
      output.WriteSFixed32(Height);
    }
    if (DisplayX != 0) {
      output.WriteRawTag(45);
      output.WriteSFixed32(DisplayX);
    }
    if (DisplayY != 0) {
      output.WriteRawTag(53);
      output.WriteSFixed32(DisplayY);
    }
    if (Selected != false) {
      output.WriteRawTag(56);
      output.WriteBool(Selected);
    }
    if (Active != false) {
      output.WriteRawTag(64);
      output.WriteBool(Active);
    }
    if (IsDeactivating != false) {
      output.WriteRawTag(72);
      output.WriteBool(IsDeactivating);
    }
    if (Quantity != 0) {
      output.WriteRawTag(85);
      output.WriteSFixed32(Quantity);
    }
    if (LastValue != 0D) {
      output.WriteRawTag(89);
      output.WriteDouble(LastValue);
    }
    if (Name.Length != 0) {
      output.WriteRawTag(98);
      output.WriteBytes(Name);
    }
    if (Text.Length != 0) {
      output.WriteRawTag(106);
      output.WriteBytes(Text);
    }
    if (SetText.Length != 0) {
      output.WriteRawTag(114);
      output.WriteBytes(SetText);
    }
    if (Hint.Length != 0) {
      output.WriteRawTag(122);
      output.WriteBytes(Hint);
    }
    if (PythonObjectTypeName.Length != 0) {
      output.WriteRawTag(130, 1);
      output.WriteString(PythonObjectTypeName);
    }
    children_.WriteTo(output, _repeated_children_codec);
    if (Display != false) {
      output.WriteRawTag(144, 1);
      output.WriteBool(Display);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Top != 0) {
      output.WriteRawTag(13);
      output.WriteSFixed32(Top);
    }
    if (Left != 0) {
      output.WriteRawTag(21);
      output.WriteSFixed32(Left);
    }
    if (Width != 0) {
      output.WriteRawTag(29);
      output.WriteSFixed32(Width);
    }
    if (Height != 0) {
      output.WriteRawTag(37);
      output.WriteSFixed32(Height);
    }
    if (DisplayX != 0) {
      output.WriteRawTag(45);
      output.WriteSFixed32(DisplayX);
    }
    if (DisplayY != 0) {
      output.WriteRawTag(53);
      output.WriteSFixed32(DisplayY);
    }
    if (Selected != false) {
      output.WriteRawTag(56);
      output.WriteBool(Selected);
    }
    if (Active != false) {
      output.WriteRawTag(64);
      output.WriteBool(Active);
    }
    if (IsDeactivating != false) {
      output.WriteRawTag(72);
      output.WriteBool(IsDeactivating);
    }
    if (Quantity != 0) {
      output.WriteRawTag(85);
      output.WriteSFixed32(Quantity);
    }
    if (LastValue != 0D) {
      output.WriteRawTag(89);
      output.WriteDouble(LastValue);
    }
    if (Name.Length != 0) {
      output.WriteRawTag(98);
      output.WriteBytes(Name);
    }
    if (Text.Length != 0) {
      output.WriteRawTag(106);
      output.WriteBytes(Text);
    }
    if (SetText.Length != 0) {
      output.WriteRawTag(114);
      output.WriteBytes(SetText);
    }
    if (Hint.Length != 0) {
      output.WriteRawTag(122);
      output.WriteBytes(Hint);
    }
    if (PythonObjectTypeName.Length != 0) {
      output.WriteRawTag(130, 1);
      output.WriteString(PythonObjectTypeName);
    }
    children_.WriteTo(ref output, _repeated_children_codec);
    if (Display != false) {
      output.WriteRawTag(144, 1);
      output.WriteBool(Display);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (Top != 0) {
      size += 1 + 4;
    }
    if (Left != 0) {
      size += 1 + 4;
    }
    if (Width != 0) {
      size += 1 + 4;
    }
    if (Height != 0) {
      size += 1 + 4;
    }
    if (DisplayX != 0) {
      size += 1 + 4;
    }
    if (DisplayY != 0) {
      size += 1 + 4;
    }
    if (Selected != false) {
      size += 1 + 1;
    }
    if (Active != false) {
      size += 1 + 1;
    }
    if (IsDeactivating != false) {
      size += 1 + 1;
    }
    if (Quantity != 0) {
      size += 1 + 4;
    }
    if (LastValue != 0D) {
      size += 1 + 8;
    }
    if (Display != false) {
      size += 2 + 1;
    }
    if (Name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Name);
    }
    if (Text.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Text);
    }
    if (SetText.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(SetText);
    }
    if (Hint.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hint);
    }
    if (PythonObjectTypeName.Length != 0) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(PythonObjectTypeName);
    }
    size += children_.CalculateSize(_repeated_children_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(UITreeNodePB other) {
    if (other == null) {
      return;
    }
    if (other.Top != 0) {
      Top = other.Top;
    }
    if (other.Left != 0) {
      Left = other.Left;
    }
    if (other.Width != 0) {
      Width = other.Width;
    }
    if (other.Height != 0) {
      Height = other.Height;
    }
    if (other.DisplayX != 0) {
      DisplayX = other.DisplayX;
    }
    if (other.DisplayY != 0) {
      DisplayY = other.DisplayY;
    }
    if (other.Selected != false) {
      Selected = other.Selected;
    }
    if (other.Active != false) {
      Active = other.Active;
    }
    if (other.IsDeactivating != false) {
      IsDeactivating = other.IsDeactivating;
    }
    if (other.Quantity != 0) {
      Quantity = other.Quantity;
    }
    if (other.LastValue != 0D) {
      LastValue = other.LastValue;
    }
    if (other.Display != false) {
      Display = other.Display;
    }
    if (other.Name.Length != 0) {
      Name = other.Name;
    }
    if (other.Text.Length != 0) {
      Text = other.Text;
    }
    if (other.SetText.Length != 0) {
      SetText = other.SetText;
    }
    if (other.Hint.Length != 0) {
      Hint = other.Hint;
    }
    if (other.PythonObjectTypeName.Length != 0) {
      PythonObjectTypeName = other.PythonObjectTypeName;
    }
    children_.Add(other.children_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          Top = input.ReadSFixed32();
          break;
        }
        case 21: {
          Left = input.ReadSFixed32();
          break;
        }
        case 29: {
          Width = input.ReadSFixed32();
          break;
        }
        case 37: {
          Height = input.ReadSFixed32();
          break;
        }
        case 45: {
          DisplayX = input.ReadSFixed32();
          break;
        }
        case 53: {
          DisplayY = input.ReadSFixed32();
          break;
        }
        case 56: {
          Selected = input.ReadBool();
          break;
        }
        case 64: {
          Active = input.ReadBool();
          break;
        }
        case 72: {
          IsDeactivating = input.ReadBool();
          break;
        }
        case 85: {
          Quantity = input.ReadSFixed32();
          break;
        }
        case 89: {
          LastValue = input.ReadDouble();
          break;
        }
        case 98: {
          Name = input.ReadBytes();
          break;
        }
        case 106: {
          Text = input.ReadBytes();
          break;
        }
        case 114: {
          SetText = input.ReadBytes();
          break;
        }
        case 122: {
          Hint = input.ReadBytes();
          break;
        }
        case 130: {
          PythonObjectTypeName = input.ReadString();
          break;
        }
        case 138: {
          children_.AddEntriesFrom(input, _repeated_children_codec);
          break;
        }
        case 144: {
          Display = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          Top = input.ReadSFixed32();
          break;
        }
        case 21: {
          Left = input.ReadSFixed32();
          break;
        }
        case 29: {
          Width = input.ReadSFixed32();
          break;
        }
        case 37: {
          Height = input.ReadSFixed32();
          break;
        }
        case 45: {
          DisplayX = input.ReadSFixed32();
          break;
        }
        case 53: {
          DisplayY = input.ReadSFixed32();
          break;
        }
        case 56: {
          Selected = input.ReadBool();
          break;
        }
        case 64: {
          Active = input.ReadBool();
          break;
        }
        case 72: {
          IsDeactivating = input.ReadBool();
          break;
        }
        case 85: {
          Quantity = input.ReadSFixed32();
          break;
        }
        case 89: {
          LastValue = input.ReadDouble();
          break;
        }
        case 98: {
          Name = input.ReadBytes();
          break;
        }
        case 106: {
          Text = input.ReadBytes();
          break;
        }
        case 114: {
          SetText = input.ReadBytes();
          break;
        }
        case 122: {
          Hint = input.ReadBytes();
          break;
        }
        case 130: {
          PythonObjectTypeName = input.ReadString();
          break;
        }
        case 138: {
          children_.AddEntriesFrom(ref input, _repeated_children_codec);
          break;
        }
        case 144: {
          Display = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
